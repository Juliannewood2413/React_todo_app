{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","console","log","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.365b6709.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Form = ({inputText, setInputText, todos, setTodos, setStatus}) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputText(e.target.value);\r\n    };\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id:Math.random() *1000}\r\n        ]);\r\n        setInputText('');\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        // console.log(e.target.value);\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return(\r\n    <form>\r\n        <input value = {inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n        <button onClick = {submitTodoHandler}className=\"todo-button\" type=\"submit\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n            <select \r\n            name=\"todos\" \r\n            className=\"filter-todo\"\r\n            onChange={statusHandler}\r\n            >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"remaining\">Remaining</option>\r\n            </select>\r\n        </div>\r\n\r\n    </form>\r\n    \r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Form;\r\n\r\n","import React from 'react';\r\nimport TodoList from './TodoList';\r\n\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n\r\n        // console.log(todo);\r\n        \r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                };\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\r\n            <button onClick={completeHandler}className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\r\n\r\nconsole.log(filteredTodos)\r\n\r\n    return (\r\n    <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n            {filteredTodos.map(todo => (\r\n                <Todo \r\n                key={todo.id} \r\n                todo={todo}\r\n                text={todo.text}\r\n                todos={todos} \r\n                setTodos={setTodos}/>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList'\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n    //Use Effect\n    useEffect(() => {\n      filterHandler();\n      saveLocalTodos();\n    }, [todos, status]);\n\n  //Functions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case 'remaining':\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  const saveLocalTodos = () => {\n  \n      localStorage.setItem('todos', JSON.stringify(todos))\n  \n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]))\n    }else{\n     let todoLocal = JSON.parse(localStorage.getItem('todos'))\n    //  console.log(todoLocal)\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n         <header>\n        <h1>Daily Todo List</h1>\n    </header>\n    <Form \n    todos={todos} \n    setTodos={setTodos}\n    inputText = {inputText} \n    setInputText = {setInputText} \n    setStatus = {setStatus}\n    />\n    <TodoList \n    todos={todos} \n    setTodos={setTodos}\n    filteredTodos = {filteredTodos}\n    />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}